#!/usr/bin/env python3

###################################
# SALTED-TOP3 SCRIPT              #
# Checks for processes using more #
# than 10% CPU or memory.         #
# Created by Matthew Boucher on   #
# 2024-08-17                      #
###################################

import subprocess

def get_high_usage_processes():
    # Run the top command with batch mode (-b) for non-interactive output
    top_output = subprocess.run(['top', '-b', '-n', '1'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)

    # Check if the command was successful
    if top_output.returncode != 0:
        print("Error running top command")
        print(top_output.stderr)
        return

    # Split output into lines
    lines = top_output.stdout.splitlines()

    # Skip header lines, find the actual process data
    process_lines = []
    process_data_started = False

    for line in lines:
        if line.startswith("PID"):  # Detect the header for processes
            process_data_started = True
            continue

        if process_data_started:
            process_lines.append(line)

    # Analyze processes and filter by CPU or memory usage > 10%
    high_usage_processes = []
    for process in process_lines:
        columns = process.split()

        if len(columns) < 9:
            continue  # Skip lines that don't have enough columns

        cpu_usage = float(columns[8])
        mem_usage = float(columns[9])

        if cpu_usage > 10.0 or mem_usage > 10.0:
            high_usage_processes.append(process)

    return high_usage_processes

def main():
    high_usage_processes = get_high_usage_processes()

    if high_usage_processes:
        print("Processes using more than 10% CPU or Memory:")
        for process in high_usage_processes:
            print(process)
    else:
        print("No processes are consuming more than 10% of CPU or Memory.")

if __name__ == "__main__":
    main()

