#!/usr/bin/env python3

###################################
#  SALTED-SERVICEFIX SCRIPT       #
#  Check the status of all        #
#  services on the system.        #
#  Attempt to restart specific    #
#  failed services.               #
#  created by Matthew Boucher     #
#          2024-05-26             #
###################################

import subprocess
import sys

# List of services to restart if failed
services_to_restart = [
    "splunk.service"
]

def check_services():
    try:
        # Define the command to list all failed services
        cmd = ["systemctl", "list-units", "--type=service", "--plain", "--no-legend", "--state=failed"]
        
        # Execute the command
        result = subprocess.run(
            cmd,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            universal_newlines=True
        )
        
        # Check if the command was successful
        if result.returncode == 0:
            output = result.stdout.strip()
            if output:
                failed_services = output.splitlines()
                print("Failed services detected:")
                for service in failed_services:
                    service_name = service.split()[0]
                    print(f"- {service_name}")
                    display_service_status(service_name)
                    
                    # Check if the service is in the restart list
                    if service_name in services_to_restart:
                        print(f"Attempting to restart {service_name} with sudo...")
                        restart_service(service_name)
            else:
                print("No failed services.")
        else:
            print("Error checking services:", result.stderr)
    
    except Exception as e:
        print("An error occurred:", e)

def display_service_status(service_name):
    """Display detailed status of a specific service."""
    status_cmd = ["systemctl", "status", service_name]
    status_result = subprocess.run(
        status_cmd,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        universal_newlines=True
    )
    print(status_result.stdout)

def restart_service(service_name):
    """Attempt to restart a specific service using sudo."""
    restart_cmd = ["sudo", "systemctl", "restart", service_name]
    restart_result = subprocess.run(
        restart_cmd,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        universal_newlines=True
    )

    if restart_result.returncode == 0:
        print(f"{service_name} restarted successfully.")
    else:
        print(f"Failed to restart {service_name}: {restart_result.stderr}")

if __name__ == "__main__":
    check_services()

