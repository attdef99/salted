#!/usr/bin/env python3

# #####################################
# CHKFS SCRIPT                        #
# Script to check filesystem errors   #
# and I/O statistics on all partitions#
# in Red Hat Linux.                   #
# Created by Matthew Boucher          #
# 2024-05-06                          #
# #####################################

import subprocess
import sys

def check_io():
    """Function to check I/O statistics for all disks."""
    try:
        print("Gathering I/O statistics for all disks:")
        result = subprocess.run(["iostat"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
        
        if result.returncode == 0:
            print(result.stdout)
        else:
            print("Failed to gather I/O statistics.", file=sys.stderr)
            print(result.stderr, file=sys.stderr)

    except FileNotFoundError:
        print("iostat command not found. Please ensure sysstat package is installed.", file=sys.stderr)
    except Exception as e:
        print(f"An unexpected error occurred while checking I/O statistics: {str(e)}", file=sys.stderr)

def check_filesystems():
    """Function to check filesystem errors on all mountable partitions."""
    try:
        # Read /etc/fstab to find all mountable partitions
        with open("/etc/fstab", "r") as file:
            fstab_lines = file.readlines()

        # Iterate through each line in fstab
        for line in fstab_lines:
            # Skip lines that are comments or empty
            if line.strip() == "" or line.strip().startswith("#"):
                continue

            # Split the line into components
            parts = line.split()
            # Check if there are at least the necessary columns
            if len(parts) < 4:
                continue

            device, mount_point, fs_type, options = parts[:4]

            # Skip partitions marked with 'noauto'
            if "noauto" in options.split(","):
                continue

            # Perform fsck on the device
            print(f"Checking {device} mounted on {mount_point}...")
            result = subprocess.run(["fsck", "-n", "-V", device], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
            
            if result.returncode == 0:
                print(f"{device}: Filesystem is clean.")
            else:
                print(f"{device}: Errors detected or fsck failed.", file=sys.stderr)
                print(result.stderr, file=sys.stderr)

    except FileNotFoundError:
        print("Error: /etc/fstab not found. Ensure this script runs on a Linux system with /etc/fstab.", file=sys.stderr)
    except Exception as e:
        print(f"An unexpected error occurred: {str(e)}", file=sys.stderr)

def main():
    check_io()
    check_filesystems()

if __name__ == "__main__":
    main()

